[uwsgi]
; necessary to gracefully re-spawn workers
master = true
# application's base folder
base = /var/www/circulation
home = %(base)/env
pythonpath = %(base)

# python module to import
module = api.app
callable = app

# location and permissions of socket file
socket = /var/www/circulation/%n.sock
chmod-socket = 666

# location of log files
logto = /var/log/uwsgi/%n.log
log-format = %(addr) - - [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(size) "%(referer)" "%(uagent)" host_hdr=%(host) req_time_elapsed=%(msecs)

; max number of workers; %k is the number of detected CPU cores
processes = %(%k + 1)
threads = 2
; forcefully kill workers after 300s
harakiri = 300
lazy-apps = true
touch-workers-reload = %(base)/uwsgi.ini
buffer-size = 131072

; minimum of 2 workers at any time
; the master process will spawn and shut down workers as needed
cheaper = 2
; start off with four workers at start up
cheaper-initial = 3
; increase by one worker if needed
cheaper-step = 1
; algorithm to use to create a worker; spare is the default
cheaper-algo = spare
; amount of time needed for uWSGI to spawn a new worker
cheaper-overload = 30
; timeout before reloading a worker in case it is running a request
; 60 is the default
worker-reload-mercy = 60